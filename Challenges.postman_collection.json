{
	"info": {
		"_postman_id": "37d87638-47bd-40f0-815a-cc67c4d081c9",
		"name": "Challenges",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25648380"
	},
	"item": [
		{
			"name": "Getting Started",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"X-Challenger\");",
							"});",
							"",
							"responseheaders = pm.response.headers.get(\"X-Challenger\")",
							"console.log(responseheaders)",
							"pm.collectionVariables.set(\"X-Challenger\",responseheaders)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/challenger",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"challenger"
					]
				}
			},
			"response": []
		},
		{
			"name": "First Real Challenge",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/challenges",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"challenges"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "REWORK Challenges -todos XML prefered",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/xml, application/JSON"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos Invalid Accept",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 406\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/graphql"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos ANY",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todo",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos/7",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos  nonexisting id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos/79",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos",
						"79"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos  query parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//todos[0].doneStatus",
							"pm.test(\"Check result for done\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData)",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos?doneStatus=true",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HEAD todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"create todo schedule client call\",\n    \"doneStatus\": true,\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo XML",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<todo>\n        <doneStatus>false</doneStatus>\n        <description/>\n        <title>train staff</title>\n</todo>\n    ",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo POST XML accept JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<todo>\n        <doneStatus>false</doneStatus>\n        <description/>\n        <title>train staff</title>\n</todo>\n    ",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo POST JSON accept XML",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"create todo schedule client call\",\n    \"doneStatus\": true,\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Content-Type",
						"value": "application/pdf"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<todo>\n        <doneStatus>false</doneStatus>\n        <description/>\n        <title>train staff</title>\n</todo>\n    ",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo with ID REWORK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Updating id 7\",\n    \"doneStatus\": true,\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/todos/7",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo invalid DoneState",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"create todo schedule client call\",\n    \"doneStatus\": \"test\",\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}todos",
					"host": [
						"{{baseURL}}todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo incorrect title length",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"create todo schedule client call create todo schedule client call create todo schedule client call create todo schedule client call\",\n    \"doneStatus\": true,\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}todos",
					"host": [
						"{{baseURL}}todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo iMax title length",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"create todo schedule client call56789095778859788l\",\n    \"doneStatus\": true,\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}todos",
					"host": [
						"{{baseURL}}todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo incorrect JSON fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"create todo schedule client call56789095778859788l\",\n    \"doneStatus\": true,\n    \"description\": \"\",\n    \"dateofCompletion\": \"10-10-2024\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}todos",
					"host": [
						"{{baseURL}}todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo payload Max length REWORK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"create todo schedule client call56789095778859788l\",\n    \"doneStatus\": true,\n    \"description\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}todos",
					"host": [
						"{{baseURL}}todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Todo description too long REWORK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"create todo schedule\",\n    \"doneStatus\": true,\n    \"description\": \"1234567890123\",\n    \"da\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}todos",
					"host": [
						"{{baseURL}}todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos/7",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE not allowed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {",
							"    pm.response.to.have.status(405);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/heartbeat",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"heartbeat"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Internal Server Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/heartbeat",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"heartbeat"
					]
				}
			},
			"response": []
		},
		{
			"name": "TRACE Not Implemented",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 501\", function () {",
							"    pm.response.to.have.status(501);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "TRACE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/heartbeat",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"heartbeat"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/heartbeat",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"heartbeat"
					]
				}
			},
			"response": []
		},
		{
			"name": "OPTIONS-todos REWORK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Challenges -todos XML",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"url": {
					"raw": "{{baseURL}}/todos",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authentication Challange",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "Pa55word",
							"type": "string"
						},
						{
							"key": "username",
							"value": "Admin1",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/token",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authentication Challenge success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"responseheaders = pm.response.headers.get(\"X-Auth-Token\")",
							"console.log(responseheaders)",
							"pm.collectionVariables.set(\"X-AuthToken\",responseheaders)",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "password",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/token",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Forbidden 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "password",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					},
					{
						"key": "X-AUTH-TOKEN",
						"value": "e239d244-fe66-4de1-a127-34928701a400"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/note",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"note"
					]
				}
			},
			"response": []
		},
		{
			"name": "Unauthorized 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "password",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					},
					{
						"key": "",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/note",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"note"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authorized GET 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "password",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-AuthToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/note",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"note"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Amend 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "password",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-AuthToken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"note\": \"my note is here Suba\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/note",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"note"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Amend Invalid AUTHTOKEN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "password",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "X-Auth-Token",
						"value": "bob"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"note\": \"my note is here Suba\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/note",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"note"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Amend no AUTH TOKEN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "password",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-AuthToken}}",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"note\": \"my note is here Suba\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/note",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"note"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST BearerToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{X-AuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-AuthToken}}",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"note\": \"my note is here Bearer TOKEN\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/note",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"note"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BearerToken note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{X-AuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-AuthToken}}",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"note\": \"my note is here Bearer\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/secret/note",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"secret",
						"note"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "X-Challenger",
			"value": ""
		},
		{
			"key": "baseURL",
			"value": "https://apichallenges.herokuapp.com",
			"type": "string"
		},
		{
			"key": "X-AuthToken",
			"value": ""
		}
	]
}